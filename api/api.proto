/*
 * ProtoBuf file for communication between customer and myOpenFactory cloud
 */
syntax = "proto3";

package api;
option java_package = "com.myopenfactory.application.transports.client.api";
option java_multiple_files = true;
option go_package = "github.com/myopenfactory/client/api";

// List of Messages
message Messages {
    repeated Message messages = 1;
}

// Message is a edi message with extra information
message Message {
    string process_id = 1; // processid for reference to convert in the cloud
    string id = 2; // identifier of the message for example the database id
    bool test = 3; // is this message a test message?
    map<string, string> properties = 4; // Extra information for example the filename
    bytes content = 5; // the message itself
    repeated Attachment attachments = 6; // list of attchments to this message
}

// Confirmation of a message
message Confirm {
    string process_id = 1; // process id oth the message to confirm
    string id = 2; // identifier of the message for example the database id
    bool success = 3; // receive success
    repeated Log logs = 4; // log informations
    int32 status_code = 5; // statuscode
}

message Log {
    Level level = 1;
    string description = 2;

    enum Level {
        DEBUG = 0;
        INFO = 1;
        WARN = 2;
        ERROR = 3;
    }
}

message Empty {
}

message Configuration {
    repeated ProcessConfig inbound = 1;
    repeated ProcessConfig outbound = 2;
}

message ProcessConfig {
    string process_id = 1;
    string type = 2;
    map<string, string> parameter = 3;
}

message Attachment {
    string filename = 1;
    string content_type = 2;
    string description = 3;
    string version = 4;
    oneof content {
        bytes data = 5;
        string url = 6;
    }
}

message HealthInfo {
    double cpu = 1;
    double ram = 2;
    string status = 3;
    uint32 threads = 4;
    uint64 uptime = 5;
    string os = 6;
}

service ClientService {
    rpc ListConfigs (Empty) returns (Configuration);
    rpc AddAttachment (Attachment) returns (Confirm);
    rpc AddMessage (Message) returns (Confirm);
    rpc ListMessages (Empty) returns (Messages);
    rpc ConfirmMessage (Confirm) returns (Empty);
    rpc AddHealth (HealthInfo) returns (Empty);
}
